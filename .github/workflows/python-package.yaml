name: Python package

on:
  push:
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        poetry-version: [1.1.4]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install dependencies
      run: |
        poetry install
    - name: Format with black
      run: |
        poetry run make check-format
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run make check-lint
    - name: Test with pytest
      run: |
        poetry run make test

  publish:
    # needs: test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6]
        poetry-version: [1.1.4]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Bump version
      run: |
        echo ${{ github.event }}
        echo ${{ gtihub.event_path }}
    # - name: Build distribution
    #   run: |
    #     poetry build
    # - name: Publish to PyPI
    #   run: |
    #     poetry publish --user vlandeiro --password ${{ secrets.PYPI_API_TOKEN }} --dry-run
